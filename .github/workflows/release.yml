name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.5'
          cache: true

      - name: Get version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build for all platforms
        run: |
          make build-all
        env:
          VERSION: ${{ steps.version.outputs.version }}

      - name: Create release archives
        run: |
          make release
        env:
          VERSION: ${{ steps.version.outputs.version }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            crypt-${{ steps.version.outputs.version }}-linux-amd64.tar.gz
            crypt-${{ steps.version.outputs.version }}-linux-arm64.tar.gz
            crypt-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz
            crypt-${{ steps.version.outputs.version }}-darwin-arm64.tar.gz
            crypt-${{ steps.version.outputs.version }}-windows-amd64.zip
            crypt-${{ steps.version.outputs.version }}-windows-arm64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.5'
          cache: true

      - name: Run tests
        run: make test

      - name: Run security check
        run: make security

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.5'
          cache: true

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

      - name: Run linter
        run: make lint
